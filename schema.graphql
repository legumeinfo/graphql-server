"""
Organism represents a species
"""
type Organism {
  id: ID!
  name: String
  """
  commonNames are commonly null but could also be multiple; should we allow that in the schema?
  """
  commonName: String
  description: String
  genus: String!
  species: String!
  strains: [Strain!]
}

"""
Strain represents a genetically characterizable entity like a cultivar or landrace
"""
type Strain {
  id: ID!
  name: String
  accession: String
  """
  maybe more properly genomeassemblies
  """
  genomes: [Genome]
  genes: [Gene!]
}

interface SequenceCollection {
  sequences: [Sequence!]
}
interface Sequence {
  id: ID!
  sequence: String!
}
type GenomeSequence implements Sequence {
  id: ID!
  sequence: String!
}

type Genome implements SequenceCollection {
  organism: Organism!
  version: String!
  sequences: [GenomeSequence!]
  genes: [Gene!]
}

type Gene {
  id: ID!
  name: String
  description: String
  strain: Strain
  genome: Genome
  geneFamilyAssignments: [GeneFamilyAssignment!]
  proteinDomains: [ProteinDomain!]
}

type GeneFamilyAssignment {
    geneFamily: GeneFamily!
    score:  Float
    e_value: Float
}

#how would we model taxonomic composition?
type GeneFamily {
  id: ID!
  name: String!
  description: String
  size: Int
  genes: [Gene!]
  tree: Phylotree
}

type Phylotree {
  id: ID!
}

type ProteinDomain {
    id: ID!
    accession: String
    name: String
    description: String
}

type Query {
  organisms(genus: String, species: String, start: Int, size: Int): [Organism]
  organism(id: ID!): Organism
  genes(strain: String, family: String, description: String, start: Int, size: Int): [Gene]
  gene(id: ID!): Gene
  geneSearch(keyword: String!, start: Int, size: Int): [Gene]
  geneFamilies(start: Int, size: Int): [GeneFamily]
  geneFamily(id: ID!): GeneFamily
}
