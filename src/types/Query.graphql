# -----------------------------------------------------
# Queries for all the types contained in this directory
# -----------------------------------------------------

# Metadata types

type IdentifierCount {
  identifier: ID
  count: Int
}

type ResultsInfo {
  identifierCounts: [IdentifierCount!]!
}

type PageInfo {
  currentPage: Int
  pageSize: Int
  numResults: Int
  pageCount: Int
  hasPreviousPage: Boolean
  hasNextPage: Boolean
}

# Wrapper types that allow inclusion of metadata with results

### Annotatables
type ChromosomeResults {
  results: Chromosome
}

type ExpressionSampleResults {
  results: ExpressionSample
}

type ExpressionSourceResults {
  results: ExpressionSource
}

type ExpressionValueResults {
  results: ExpressionValue
}

type GeneResults {
  results: Gene
}

type GetGenesResults {
  results: [Gene!]!
}

type GeneFamilyResults {
  results: GeneFamily
}

type GeneticMapResults {
  results: GeneticMap
}

type GeneticMarkerResults {
  results: GeneticMarker
}

type GenotypingPlatformResults {
  results: GenotypingPlatform
}

type GwasResults {
  results: GWAS
}

type MRNAResults {
  results: MRNA
}

type PanGeneSetResults {
  results: PanGeneSet
}

type PathwayResults {
  results: Pathway
}

type PhylotreeResults {
  results: Phylotree
}

type ProteinResults {
  results: Protein
}

type ProteinDomainResults {
  results: ProteinDomain
}

type QtlStudyResults {
  results: QTLStudy
}

type SupercontigResults {
  results: Supercontig
}

type SyntenicRegionResults {
  results: SyntenicRegion
}

type TraitResults {
  results: Trait
}

### other types with unique non-id keys
type DataSetResults {
  results: DataSet
}

type OntologyResults {
  results: Ontology
}

type OntologyTermResults {
  results: OntologyTerm
}

type OrganismResults {
  results: Organism
}

type PublicationResults {
  results: Publication
}

type StrainResults {
  results: Strain
}

### types identified by numerical id
type AuthorResults {
  results: Author
}

type GeneFamilyAssignmentResults {
  results: GeneFamilyAssignment
}

type GeneFamilyTallyResults {
  results: GeneFamilyTally
}

type GwasResultResults {
  results: GWASResult
}

type LinkageGroupResults {
  results: LinkageGroup
}

type LinkageGroupPositionResults {
  results: LinkageGroupPosition
}

type LocationResults {
  results: Location
}

type OntologyAnnotationResults {
  results: OntologyAnnotation
}

type PhylonodeResults {
  results: Phylonode
}

type QtlResults {
  results: QTL
}

type SyntenyBlockResults {
  results: SyntenyBlock
}

### multiple-result queries (typically searches)
type ChromosomesResults {
  results: [Chromosome!]!
  pageInfo: PageInfo
}

type ExpressionSamplesResults {
  results: [ExpressionSample!]!
  pageInfo: PageInfo
}

type ExpressionSourcesResults {
  results: [ExpressionSource!]!
  pageInfo: PageInfo
}

type ExpressionValuesResults {
  results: [ExpressionValue!]!
  pageInfo: PageInfo
}

type GenesResults {
  results: [Gene!]!
  pageInfo: PageInfo
}

type GeneFamiliesResults {
  results: [GeneFamily!]!
  pageInfo: PageInfo
}

type GeneticMapsResults {
  results: [GeneticMap!]!
  pageInfo: PageInfo
}

type GwasesResults {
  results: [GWAS!]!
  pageInfo: PageInfo
}

type OntologyTermsResults {
  results: [OntologyTerm!]!
  pageInfo: PageInfo
}

type OrganismsResults {
  results: [Organism!]!
  pageInfo: PageInfo
}

type PanGenePairsResults {
  results: [PanGenePair!]!
  resultsInfo: ResultsInfo
  pageInfo: PageInfo
}

type ProteinsResults {
  results: [Protein!]!
  pageInfo: PageInfo
}

type ProteinDomainsResults {
  results: [ProteinDomain!]!
  pageInfo: PageInfo
}

type PublicationsResults {
  results: [Publication!]!
  pageInfo: PageInfo
}

type QtlsResults {
  results: [QTL!]!
  pageInfo: PageInfo
}

type QtlStudiesResults {
  results: [QTLStudy!]!
  pageInfo: PageInfo
}

type StrainsResults {
  results: [Strain!]!
  pageInfo: PageInfo
}

type TraitsResults {
  results: [Trait!]!
  pageInfo: PageInfo
}

### microservices queries
type GeneLinkoutsResults {
  results: [Linkout!]!
}

type LocationLinkoutsResults {
  results: [Linkout!]!
}

type GeneFamilyLinkoutsResults {
  results: [Linkout!]!
}

type PanGeneSetLinkoutsResults {
  results: [Linkout!]!
}

type GWASLinkoutsResults {
  results: [Linkout!]!
}

type QTLStudyLinkoutsResults {
  results: [Linkout!]!
}


# Top-level queries

type Query {

  ### Annotatables
  chromosome(identifier: ID!): ChromosomeResults
  expressionSample(identifier: ID!): ExpressionSampleResults
  expressionSource(identifier: ID!): ExpressionSourceResults
  gene(identifier: ID!): GeneResults
  geneFamily(identifier: ID!): GeneFamilyResults
  geneticMap(identifier: ID!): GeneticMapResults
  geneticMarker(identifier: ID!): GeneticMarkerResults
  genotypingPlatform(identifier: ID!): GenotypingPlatformResults
  gwas(identifier: ID!): GwasResults
  gwasResult(identifier: ID!): GwasResultResults
  linkageGroup(identifier: ID!): LinkageGroupResults
  mRNA(identifier: ID!): MRNAResults
  panGeneSet(identifier: ID!): PanGeneSetResults
  pathway(identifier: ID!): PathwayResults
  phylotree(identifier: ID!): PhylotreeResults
  protein(identifier: ID!): ProteinResults
  proteinDomain(identifier: ID!): ProteinDomainResults
  qtl(identifier: ID!): QtlResults
  qtlStudy(identifier: ID!): QtlStudyResults
  supercontig(identifier: ID!): SupercontigResults
  syntenicRegion(identifier: ID!): SyntenicRegionResults
  trait(identifier: ID!): TraitResults

  ### other types with unique non-id keys
  dataSet(name: ID!): DataSetResults
  ontology(name: ID!): OntologyResults
  ontologyTerm(identifier: ID!): OntologyTermResults
  organism(taxonId: ID!): OrganismResults
  publication(doi: ID!): PublicationResults
  strain(identifier: ID!): StrainResults

  ### types identified by numerical id
  author(id: ID!): AuthorResults
  geneFamilyAssignment(id: ID!): GeneFamilyAssignmentResults
  geneFamilyTally(id: ID!): GeneFamilyTallyResults
  linkageGroupPosition(id: ID!): LinkageGroupPositionResults
  location(id: ID!): LocationResults
  ontologyAnnotation(id: ID!): OntologyAnnotationResults
  phylonode(id: ID!): PhylonodeResults
  syntenyBlock(id: ID!): SyntenyBlockResults

  ### types without any sort of id
  expressionValue(sampleIdentifier: ID!, geneIdentifier: ID!): ExpressionValueResults
  
  ### multiple-result queries (typically searches)
  chromosomes(genus: String, species: String, strain: String, assembly: String, annotation: String, page: Int, pageSize: Int): ChromosomesResults
  expressionSamples(description: String, page: Int, pageSize: Int): ExpressionSamplesResults
  expressionSources(description: String, page: Int, pageSize: Int): ExpressionSourcesResults
  expressionValues(minValue: Float, geneIdentifier: String, sampleIdentifier: String, page: Int, pageSize: Int): ExpressionValuesResults
  getGenes(identifiers: [ID!]!): GetGenesResults
  genes(description: String, genus: String, species: String, strain: String, identifier: String, name: String,
    geneFamilyIdentifier: String, panGeneSetIdentifier: String, page: Int, pageSize: Int): GenesResults
  geneFamilies(description: String, page: Int, pageSize: Int): GeneFamiliesResults
  geneticMaps(description: String, page: Int, pageSize: Int): GeneticMapsResults
  gwases(description: String, page: Int, pageSize: Int): GwasesResults
  ontologyTerms(description: String, page: Int, pageSize: Int): OntologyTermsResults
  organisms(taxonId: Int, abbreviation: String, name: String, genus: String, species: String, page: Int, pageSize: Int): OrganismsResults
  panGenePairs(identifiers: [ID!]!, genus: String, species: String, strain: String, assembly: String, annotation: String, page: Int, pageSize: Int): PanGenePairsResults
  proteins(description: String, page: Int, pageSize: Int): ProteinsResults
  proteinDomains(description: String, page: Int, pageSize: Int): ProteinDomainsResults
  publications(title: String, page: Int, pageSize: Int): PublicationsResults
  qtls(traitName: String, page: Int, pageSize: Int): QtlsResults
  qtlStudies(description: String, page: Int, pageSize: Int): QtlStudiesResults
  strains(description: String, origin: String, species: String, page: Int, pageSize: Int): StrainsResults
  traits(name: String, studyType: String, publicationId: String, author: String, page: Int, pageSize: Int): TraitsResults

  ### microservices queries
  geneLinkouts(identifier: ID!): GeneLinkoutsResults
  locationLinkouts(identifier: ID!, start: Int!, end: Int!): LocationLinkoutsResults
  geneFamilyLinkouts(identifier: ID!): GeneFamilyLinkoutsResults
  panGeneSetLinkouts(identifier: ID!): PanGeneSetLinkoutsResults
  gwasLinkouts(identifier: ID!): GWASLinkoutsResults
  qtlStudyLinkouts(identifier: ID!): QTLStudyLinkoutsResults

}
